{"ast":null,"code":"var _jsxFileName = \"/Users/rylanloukusa/School/SC/FinalPlanner/src/Components/QuestionnaireTextField.jsx\",\n  _s = $RefreshSig$();\nimport { PropTypes } from \"prop-types\";\nimport { React, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionnaireTextField = props => {\n  _s();\n  const [text, setText] = useState(\"Enter Answer\");\n\n  //removes default text value upon inputFocus\n  const handleInputFocus = () => {\n    setText(\"\");\n  };\n\n  //inserts default text value upon inputBlur\n  const handleInputBlur = () => {\n    if (text === \"\") {\n      setText(\"Enter Answer\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: Styles.InputPrompt,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onFocus: handleInputFocus,\n        onBlur: handleInputBlur,\n        onChange: event => {\n          setText(event.target.value);\n        },\n        style: Styles.Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionnaireTextField, \"hVkTIRsDH3eVkqUddswzYV+2ajk=\");\n_c = QuestionnaireTextField;\nQuestionnaireTextField.propTypes = {\n  label: PropTypes.string.isRequired\n};\nexport default QuestionnaireTextField;\nconst Styles = {\n  Setup: {\n    backgroundColor: 'white'\n  },\n  Buttons: {\n    backgroundColor: 'orange',\n    margin: 10\n  },\n  ButtonText: {\n    textAlign: 'center'\n  },\n  SelectionView: {\n    borderWidth: 4,\n    padding: 5,\n    paddingBottom: 10,\n    margin: 10\n  },\n  HeaderText: {\n    fontWeight: 'bold',\n    textSize: 25\n  },\n  TitleText: {\n    fontSize: 40,\n    paddingBottom: 50,\n    color: 'grey',\n    textAlign: 'center'\n  },\n  Input: {\n    borderStyle: 'solid',\n    borderRadius: 2,\n    borderWidth: 1,\n    width: '100%',\n    height: 100,\n    marginBottom: 30,\n    padding: 5,\n    fontSize: 15\n  },\n  Header: {\n    padding: 20,\n    textAlign: 'center',\n    fontSize: 20\n  },\n  InputPrompt: {\n    color: 'orange',\n    fontSize: 15,\n    margin: 10\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireTextField\");","map":{"version":3,"names":["PropTypes","React","useState","jsxDEV","_jsxDEV","QuestionnaireTextField","props","_s","text","setText","handleInputFocus","handleInputBlur","children","style","textAlign","Styles","InputPrompt","label","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onFocus","onBlur","onChange","event","target","Input","_c","propTypes","string","isRequired","Setup","backgroundColor","Buttons","margin","ButtonText","SelectionView","borderWidth","padding","paddingBottom","HeaderText","fontWeight","textSize","TitleText","fontSize","color","borderStyle","borderRadius","width","height","marginBottom","Header","$RefreshReg$"],"sources":["/Users/rylanloukusa/School/SC/FinalPlanner/src/Components/QuestionnaireTextField.jsx"],"sourcesContent":["\r\nimport { PropTypes } from \"prop-types\";\r\nimport { React, useState } from \"react\";\r\n\r\nconst QuestionnaireTextField = (props) => {\r\n    const [text, setText] = useState(\"Enter Answer\");\r\n\r\n    //removes default text value upon inputFocus\r\n    const handleInputFocus = () => {\r\n            setText(\"\");\r\n    };\r\n\r\n    //inserts default text value upon inputBlur\r\n    const handleInputBlur = () => {\r\n        if (text === \"\") {\r\n            setText(\"Enter Answer\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form style={{ textAlign: 'left'}}>\r\n                <label style={Styles.InputPrompt}>{props.label}</label><br></br>\r\n                <input\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onFocus={handleInputFocus}\r\n                    onBlur={handleInputBlur}\r\n                    onChange={(event) => { setText(event.target.value); }}\r\n                    style={Styles.Input}\r\n                />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nQuestionnaireTextField.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default QuestionnaireTextField;\r\n\r\nconst Styles = {\r\n\r\n    Setup: {\r\n        backgroundColor: 'white',\r\n    },\r\n\r\n    Buttons: {\r\n        backgroundColor: 'orange',\r\n        margin: 10,\r\n    },\r\n\r\n    ButtonText: {\r\n        textAlign: 'center',\r\n    },\r\n\r\n    SelectionView: {\r\n        borderWidth: 4,\r\n        padding: 5,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n    },\r\n\r\n    HeaderText: {\r\n        fontWeight: 'bold',\r\n        textSize: 25,\r\n    },\r\n\r\n    TitleText: {\r\n        fontSize: 40,\r\n        paddingBottom: 50,\r\n        color: 'grey',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    Input: {\r\n        borderStyle: 'solid',\r\n        borderRadius: 2,\r\n        borderWidth: 1,\r\n\r\n        width: '100%',\r\n        height: 100,\r\n\r\n        marginBottom: 30,\r\n        padding: 5,\r\n\r\n        fontSize: 15,\r\n    },\r\n\r\n    Header: {\r\n        padding: 20,\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n    },\r\n\r\n    InputPrompt: {\r\n        color: 'orange',\r\n        fontSize: 15,\r\n        margin: 10,\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}