{"ast":null,"code":"var _jsxFileName = \"/Users/rylanloukusa/School/SC/FinalPlanner/src/Components/TextField.jsx\",\n  _s = $RefreshSig$();\nimport { PropTypes } from \"prop-types\";\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = props => {\n  _s();\n  const [text, setText] = useState(`${props.action} ${props.label}`); //sets input value\n  const [fieldLabel, setFieldLabel] = useState(\"\"); //sets label value\n\n  //removes default text value upon inputFocus\n  const handleInputFocus = () => {\n    if (text === `${props.action} ${props.label}`) {\n      setText(\"\");\n    }\n  };\n\n  //inserts default text value upon inputBlur\n  const handleInputBlur = () => {\n    if (text === \"\") {\n      setText(`${props.action} ${props.label}`);\n    }\n  };\n\n  //sets label depending on props.action\n  const labelDisplay = () => {\n    if (props.action === \"Confirm\") {\n      setFieldLabel(`${props.action} ${props.label}`);\n    } else if (props.action === \"Enter\") {\n      setFieldLabel(props.label);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: Styles.SelectionView,\n      children: [useEffect(() => {\n        labelDisplay();\n      }, [props.label, props.action]), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: Styles.InputPrompt,\n        children: fieldLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onFocus: handleInputFocus,\n        onBlur: handleInputBlur,\n        onChange: event => {\n          setText(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TextField, \"sB2N3jHnqO9qB36+kOJ75ru+0GY=\");\n_c = TextField;\nTextField.propTypes = {\n  action: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\nexport default TextField;\nconst Styles = {\n  Setup: {\n    backgroundColor: 'white',\n    alignItems: 'center'\n  },\n  Buttons: {\n    backgroundColor: 'orange',\n    margin: 10\n  },\n  ButtonText: {\n    textAlign: 'center'\n  },\n  SelectionView: {\n    borderWidth: 4,\n    padding: 5,\n    paddingBottom: 10,\n    margin: 10,\n    textAlign: 'right',\n    width: '100%'\n  },\n  HeaderText: {\n    fontWeight: 'bold',\n    textSize: 25\n  },\n  TitleText: {\n    fontSize: 40,\n    paddingBottom: 50,\n    color: 'grey',\n    textAlign: 'center'\n  },\n  Input: {\n    padding: 5,\n    margin: 20,\n    borderWidth: 1\n  },\n  Header: {\n    padding: 20,\n    textAlign: 'center',\n    fontSize: 20\n  },\n  InputPrompt: {\n    color: 'orange',\n    fontSize: 15,\n    margin: 10\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["PropTypes","React","useState","useEffect","jsxDEV","_jsxDEV","TextField","props","_s","text","setText","action","label","fieldLabel","setFieldLabel","handleInputFocus","handleInputBlur","labelDisplay","style","width","children","Styles","SelectionView","InputPrompt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onFocus","onBlur","onChange","event","target","_c","propTypes","string","isRequired","Setup","backgroundColor","alignItems","Buttons","margin","ButtonText","textAlign","borderWidth","padding","paddingBottom","HeaderText","fontWeight","textSize","TitleText","fontSize","color","Input","Header","$RefreshReg$"],"sources":["/Users/rylanloukusa/School/SC/FinalPlanner/src/Components/TextField.jsx"],"sourcesContent":["\r\nimport { PropTypes } from \"prop-types\";\r\nimport { React, useState, useEffect } from \"react\";\r\n\r\nconst TextField = (props) => {\r\n    const [text, setText] = useState(`${props.action} ${props.label}`); //sets input value\r\n    const [fieldLabel, setFieldLabel] = useState(\"\"); //sets label value\r\n\r\n    //removes default text value upon inputFocus\r\n    const handleInputFocus = () => {\r\n        if (text === `${props.action} ${props.label}`) {\r\n            setText(\"\");\r\n        }\r\n    };\r\n\r\n    //inserts default text value upon inputBlur\r\n    const handleInputBlur = () => {\r\n        if (text === \"\") {\r\n            setText(`${props.action} ${props.label}`);\r\n        }\r\n    };\r\n\r\n    //sets label depending on props.action\r\n    const labelDisplay = () => {\r\n        if (props.action === \"Confirm\") {\r\n            setFieldLabel(`${props.action} ${props.label}`);\r\n        } else if (props.action === \"Enter\") {\r\n            setFieldLabel(props.label);\r\n        }\r\n    };  \r\n\r\n    return (\r\n        <div style={{ width: '80%' }}>\r\n\r\n            <form style={Styles.SelectionView}>\r\n                {useEffect(() => { labelDisplay() }, [props.label, props.action])}\r\n                <label style={Styles.InputPrompt}>{fieldLabel}</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onFocus={handleInputFocus}\r\n                    onBlur={handleInputBlur}\r\n                    onChange={(event) => { setText(event.target.value); }}\r\n\r\n                />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTextField.propTypes = {\r\n    action: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n\r\nconst Styles = {\r\n\r\n    Setup: {\r\n        backgroundColor: 'white',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    Buttons: {\r\n        backgroundColor: 'orange',\r\n        margin: 10,\r\n    },\r\n\r\n    ButtonText: {\r\n        textAlign: 'center',\r\n    },\r\n\r\n    SelectionView: {\r\n        borderWidth: 4,\r\n        padding: 5,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n        textAlign: 'right',\r\n        width: '100%'\r\n    },\r\n\r\n    HeaderText: {\r\n        fontWeight: 'bold',\r\n        textSize: 25,\r\n    },\r\n\r\n    TitleText: {\r\n        fontSize: 40,\r\n        paddingBottom: 50,\r\n        color: 'grey',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    Input: {\r\n        padding: 5,\r\n        margin: 20,\r\n        borderWidth: 1,\r\n    },\r\n\r\n    Header: {\r\n        padding: 20,\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n    },\r\n\r\n    InputPrompt: {\r\n        color: 'orange',\r\n        fontSize: 15,\r\n        margin: 10,\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}